{"version":3,"sources":["webpack:///./src/app/babylon-game/babylon-game.module.ts","webpack:///./src/app/babylon-game/babylon-game.page.html","webpack:///./src/app/babylon-game/babylon-game.page.scss","webpack:///./src/app/babylon-game/babylon-game.page.ts"],"names":[],"mappings":"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","file":"babylon-game-babylon-game-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BabylonGamePage } from './babylon-game.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BabylonGamePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BabylonGamePage]\n})\nexport class BabylonGamePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title >\\n      Babylon Game\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-fab>\\n    <ion-fab-button color=\\\"dark\\\" (click)=\\\"rollEm($event)\\\">button</ion-fab-button>\\n  </ion-fab>\\n  <canvas id=\\\"surface\\\" style=\\\"pointer-events: none\\\" #surface ion-fixed></canvas>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhYnlsb24tZ2FtZS9iYWJ5bG9uLWdhbWUucGFnZS5zY3NzIn0= */\"","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { Scene, HemisphericLight, Vector3, MeshBuilder, StandardMaterial, Color3, ArcRotateCamera, Texture, PhysicsImpostor, VertexData } from 'babylonjs';\nimport { BabylonJSService } from '../babylon-js.service';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-babylon-game',\n  templateUrl: './babylon-game.page.html',\n  styleUrls: ['./babylon-game.page.scss'],\n})\nexport class BabylonGamePage {\n\n  firstDie: any;\n  ground: any;\n  secondDie: any;\n  @ViewChild('surface') surface: ElementRef;\n\n  private _scene: Scene;\n  private _camera: ArcRotateCamera;\n  private _lightOne: HemisphericLight;\n  private _lightTwo: HemisphericLight;\n\n  constructor(\n    private engine: BabylonJSService,\n    private config: ConfigService\n  ) {}\n\n  ngOnInit(){\n    this.engine.createEngine(this.surface.nativeElement);\n    this.surface.nativeElement.width = window.innerWidth;\n    this.surface.nativeElement.height = window.innerHeight;\n    this.surface.nativeElement.style.width = '100%';\n    this.surface.nativeElement.style.height = '100%';\n    this.createScene();\n    this.animate();\n\n  }\n\n  ionViewWillEnter() {\n    if (this.config.hasChanged) { // has anything changed?\n      // then reset uv settings for both dice\n      let options = {\n        size: 1.25,\n        faceUV: this.config.getFaceUV(this.config.colorOne),\n        updatable: false\n      }\n      //MeshBuilder.UpdateBoxOptions(this.firstDie, options);\n      let vertexData = VertexData.CreateBox(options);\n      vertexData.applyToMesh(this.firstDie, options.updatable); \n\n      options = {\n        size: 1.25,\n        faceUV: this.config.getFaceUV(this.config.colorTwo),\n        updatable: false\n      }\n      //MeshBuilder.UpdateBoxOptions(this.secondDie, options);\n      vertexData = VertexData.CreateBox(options);\n      vertexData.applyToMesh(this.secondDie, options.updatable);      \n    }\n  }\n\n  createScene(): any {\n    // create a basic BJS Scene object\n    this._scene = new Scene(this.engine.getEngine());\n    console.log(this._scene.enablePhysics(new Vector3(0,-10,0))); // use physics!!\n\n    // create an ArcRotateCamera\n    // attach the camera to the canvas\n    this._camera = new ArcRotateCamera(\"ArcRotateCamera\", 0, 0, 0, Vector3.Zero(), this._scene);\n    this._camera.setPosition(new Vector3(0, 15, 1));\n    //this._camera.attachControl(this.surface.nativeElement, false);\n\n    // create two  basic light, aiming 0,1,0 - meaning, to the sky\n    this._lightOne = new HemisphericLight('light1', new Vector3(1, 0, 0), this._scene);\n    this._lightTwo = new HemisphericLight('light1', new Vector3(0, 1, -1), this._scene);\n    this._lightOne.intensity = .6;\n    this._lightTwo.intensity = .3;\n\n    // materials and textures\n    let green = new StandardMaterial(\"green\", this._scene);\n    green.diffuseColor = new Color3(0, .7, 0);\n\n    let texture = new Texture('assets/images/die.svg', this._scene);\n\n    // create a built-in \"ground\" shape and walls\n    this.ground = MeshBuilder.CreateGround('ground1', { width: 6, height: 1.618 * 6, subdivisions: 2 }, this._scene);\n    this.ground.material = green;\n    let physOptions = { mass: 0.0, restitution: .01, friction: .5 };\n    this.ground.physicsImpostor = new PhysicsImpostor(this.ground, PhysicsImpostor.PlaneImpostor, physOptions, this._scene);\n    let walls = [];\n    for (let i = 0; i < 4; i++) {\n      walls[i] = MeshBuilder.CreateBox(\"wall_\" + i, { depth: .1, width: 6, height: 32 }, this._scene);\n      walls[i].rotation.y = i * Math.PI / 2;\n      walls[i].position.y = 3;\n      walls[i].material = green;\n      if ((i == 1) || (i == 3)) {\n        walls[i].scaling.x = 1.618;\n      }\n      walls[i].physicsImpostor = new PhysicsImpostor(walls[i], PhysicsImpostor.BoxImpostor, { mass: 0 }, this._scene);\n    }\n    walls[0].position.z = 3 * 1.618;\n    walls[2].position.z = -3 * 1.618;\n    walls[1].position.x = 3;\n    walls[3].position.x = -3;\n\n    // create dice\n    let faceUV = this.config.getFaceUV(this.config.colorOne);\n    let options = {\n      size: 1.25,\n      faceUV: faceUV,\n    }\n    physOptions = { mass: 0.25, restitution: .1, friction: .1 }; // initialise physics\n    this.firstDie = MeshBuilder.CreateBox('firstDie', options, this._scene);\n    this.firstDie.physicsImpostor = new PhysicsImpostor(this.firstDie, PhysicsImpostor.BoxImpostor, physOptions, this._scene);\n    let firstDieMaterial = new StandardMaterial('firstDieMat', this._scene);\n    this.firstDie.material = firstDieMaterial;\n    firstDieMaterial.diffuseTexture = texture;\n\n    faceUV = this.config.getFaceUV(this.config.colorTwo);\n    options = {\n      size: 1.25,\n      faceUV: faceUV,\n    }\n    this.secondDie = MeshBuilder.CreateBox('secondDie', options, this._scene);\n    this.secondDie.physicsImpostor = new PhysicsImpostor(this.secondDie, PhysicsImpostor.BoxImpostor, physOptions, this._scene);\n    let secondDieMaterial = new StandardMaterial('secondDieMat', this._scene);\n    this.secondDie.material = secondDieMaterial;\n    secondDieMaterial.diffuseTexture = texture;\n\n    // set a random impulse for both dice\n    this.rollEm(null);\n\n  }\n\n  animate(): void {\n    // run the render loop\n    this.engine.start(this._scene);\n  }\n\n  rollEm(event): void {\n    // roll the dice!\n    this.firstDie.position = new Vector3(-0.5, 1.5 + Math.random(), 2.5);\n    this.secondDie.position = new Vector3(0.5, 1.5 + Math.random(), 2.5);\n    let randomVector = new Vector3((.49 - Math.random()), -0.1, -1 + (- Math.random()));\n    this.firstDie.physicsImpostor.applyImpulse(randomVector, this.firstDie.position);\n    this.secondDie.physicsImpostor.applyImpulse(randomVector, this.secondDie.position);\n  }\n\n  settings(event): void {\n //   this.navCtrl.push(ConfigPage, {});\n  }\n}\n"],"sourceRoot":""}